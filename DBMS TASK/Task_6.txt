#Task-6

#Create Data base  Doctors_Appoinments
#Use Data Base 

1.Create independent table  DEPARTMENT 
CREATE TABLE Departments (
    department_id INT PRIMARY KEY AUTO_INCREMENT,
    department_name VARCHAR(100)not null 
);
INSER DATA 
A.INSERT INTO Departments (department_name)
VALUES 
    ('Cardiology'),
    ('Neurology'),
    ('Orthopedics'),
    ('Pediatrics'),
    ('General Medicine');
B. CREATE TABLE Specialties ( specialty_id INT PRIMARY KEY, specialty_name VARCHAR(100) );
INSER DATA IN SPECIALITIES
INSERT INTO Specialties (specialty_id, specialty_name)
VALUES 
    (1, 'Cardiac Surgery'),
    (2, 'Neurophysiology'),
    (3, 'Joint Replacement'),
    (4, 'Child Health'),
    (5, 'General Practice');

2.Create Doctors table	
CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(100) not null,
    last_name VARCHAR(100)  not null,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(20) ,
    department_id INT,
    specialty_id INT,
    joining_date DATE,
	FOREIGN KEY (department_id) REFERENCES Departments(department_id),
   	FOREIGN KEY (specialty_id) REFERENCES Specialties(specialty_id)
);
INSERT INTO Doctors (first_name, last_name, email, phone, department_id, specialty_id, joining_date)
VALUES 
    ('Amit', 'Sharma', 'amit.sharma@example.in', '9876543210', 1, 1, '2023-03-15'),
    ('Priya', 'Raj', 'priya.raj@example.in', '9876543211', 2, 2, '2022-08-20'),
    ('Ravi', 'Patel', 'ravi.patel@example.in', '9876543212', 3, 3, '2021-05-10'),
    ('Neha', 'Gupta', 'neha.gupta@example.in', '9876543213', 4, 4, '2020-07-25'),
    ('Arun', 'Mehta', 'arun.mehta@example.in', '9876543214', 5, 5, '2019-12-01');

INSERT DATA 

3.CREATE PATIENTS TABLE 
CREATE TABLE Patients (
    patient_id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(20),
    date_of_birth DATE,
    gender VARCHAR(10),
    address TEXT
);
INSERT DATA 

INSERT INTO Patients (first_name, last_name, email, phone, date_of_birth, gender, address)
VALUES 
    ('Rohan', 'Singh', 'rohan.singh@example.in', '9988776655', '1995-06-15', 'Male', 'Mumbai, Maharashtra'),
    ('Sneha', 'Kumar', 'sneha.kumar@example.in', '9988776656', '1988-11-20', 'Female', 'Delhi, Delhi'),
    ('Anil', 'Reddy', 'anil.reddy@example.in', '9988776657', '1978-03-10', 'Male', 'Hyderabad, Telangana'),
    ('Pooja', 'Iyer', 'pooja.iyer@example.in', '9988776658', '1992-09-25', 'Female', 'Bengaluru, Karnataka'),
    ('Vikram', 'Chowdhury', 'vikram.chowdhury@example.in', '9988776659', '1985-01-05', 'Male', 'Kolkata, West Bengal');

4.CREATE APPOINTMENT TABLE 
CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY AUTO_INCREMENT,
    doctor_id INT ,
    patient_id INT,
    appointment_date DATETIME,
    reason VARCHAR (300),
    status VARCHAR(20),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id),
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id)
);
INSERT DATA IN APPOINTMENTS TABLE 
INSERT INTO Appointments (doctor_id, patient_id, appointment_date, reason, status)
VALUES 
    (1, 1, '2025-01-12 10:00:00', 'Heart checkup', 'Scheduled'),
    (2, 2, '2025-01-12 11:00:00', 'Migraine treatment', 'Scheduled'),
    (3, 3, '2025-01-13 09:30:00', 'Knee pain', 'Scheduled'),
    (4, 4, '2025-01-13 10:30:00', 'Routine checkup for child', 'Scheduled'),
    (5, 5, '2025-01-14 12:00:00', 'General health checkup', 'Scheduled');

5.CREATE PAYMENTS TABLE 
CREATE TABLE Payments (
    payment_id INT PRIMARY KEY AUTO_INCREMENT,
    appointment_id INT ,
    payment_date DATE,
    payment_amount DECIMAL(10, 2),
    payment_method VARCHAR(20),
 	FOREIGN KEY (appointment_id) REFERENCES Appointments(appointment_id)
);
INSERT DATA  IN PAYMENTS TABLE 
INSERT INTO Payments (appointment_id, payment_date, payment_amount, payment_method)
VALUES 
    (1, '2025-01-12', 1500.00, 'Credit Card'),
    (2, '2025-01-12', 2000.00, 'UPI'),
    (3, '2025-01-13', 2500.00, 'Debit Card'),
    (4, '2025-01-13', 1200.00, 'Cash'),
    (5, '2025-01-14', 1000.00, 'Net Banking');

QUIRES :
1.Find the Total Number of Appointments for Each Doctor
SELECT doctors.first_name,doctors.last_name,COUNT(appointments.doctor_id)AS Appointments FROM doctors JOIN appointments on appointments.doctor_id = doctors.doctor_id
GROUP by doctors.doctor_id;
2.List All Patients Who Have an Appointment with a Specific Doctor (e.g., Dr. John Smith)
SELECT patients.first_name,patients.last_name , concat(doctors.first_name ," ",doctors.last_name  )as Appointment_Doctor FROM patients
JOIN appointments on appointments.patient_id = patients.patient_id
JOIN doctors on doctors.doctor_id = appointments.doctor_id
WHERE doctors.first_name ='Amit'
GROUP by patients.patient_id;
3.Find the Number of Appointments Scheduled in a Specific Department  
SELECT departments.department_name,COUNT(appointments.appointment_id) as Schedule_Appointmnet FROM departments
JOIN doctors on doctors.department_id = departments.department_id
JOIN appointments on appointments.doctor_id = doctors.doctor_id
WHERE appointments.status = "Scheduled"
GROUP by departments.department_name;

4.Find the Most Popular Specialty Based on Number of Appointments
SELECT specialties.specialty_name , COUNT(appointments.appointment_id) FROM specialties
JOIN doctors on doctors.specialty_id = specialties.specialty_id
JOIN appointments on appointments.doctor_id = doctors.doctor_id
GROUP by specialties.specialty_name;
5.Get the Total Payment Amount for All Completed Appointments
SELECT appointments.reason,SUM(payments.payment_amount)as total_payment FROM payments
JOIN appointments on appointments.appointment_id = payments.appointment_id
WHERE appointments.status = "Compelete";
6.Find the Number of Patients Seen by Each Doctor
SELECT doctors.first_name,doctors.last_name ,COUNT(doctors.doctor_id) FROM
doctors JOIN appointments on appointments.doctor_id = doctors.doctor_id
GROUP by doctors.doctor_id;
7.List All Patients Who Have Missed Their Appointments (Status 'Cancelled')
SELECT CONCAT( patients.first_name,patients.last_name)AS Patients_Name ,appointments.status FROM patients 
JOIN appointments on appointments.patient_id = patients.patient_id
WHERE appointments.status = "Cancelled";
8.Find the Total Number of Appointments for Each Status (Scheduled, Completed, Cancelled)
SELECT appointments.status, COUNT(appointments.appointment_id) FROM appointments
GROUP by appointments.status;
9.Get the Average Payment Amount for Completed Appointments
SELECT AVG(payments.payment_amount)as avg_payment FROM payments
JOIN appointments on payments.appointment_id = appointments.appointment_id
WHERE appointments.status = "Completed";
10.Find the Doctor with the Highest Number of Appointments
SELECT doctors.first_name,doctors.last_name,COUNT(*) as total_appointment FROM appointments
JOIN doctors on doctors.doctor_id = appointments.doctor_id
GROUP by doctors.doctor_id 
ORDER by total_appointment DESC;

